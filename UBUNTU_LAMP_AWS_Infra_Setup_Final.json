{
  "AWSTemplateFormatVersion" : "2010-09-09",
            
  "Description" : "AWS CloudFormation Template UBUNTU LAMP : Create a UBUNUT LAMP stack using a single EC2 instance and a local MySQL database for storage. ",
            
  "Parameters" : 
  {
    
    "KeyName": 
    {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },    

    "DBRootPassword": 
    {
      "NoEcho": "true",
      "Description" : "Root password for MySQL",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "41",
      "AllowedPattern" : "[a-zA-Z0-9]*",
      "ConstraintDescription" : "must contain only alphanumeric characters."
    },

    "DBMain": 
    {
      "Description" : "Username for MySQL database main user",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },

    "DBMainPasswd": 
    {
      "NoEcho": "true",
      "Description" : "Root password for DBMain",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "41",
      "AllowedPattern" : "[a-zA-Z0-9]*",
      "ConstraintDescription" : "must contain only alphanumeric characters."
    },

    "InstanceType" : 
    {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t2.small",
      "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],   
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "SSHLocation" : 
    {
      "Description" : " The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }, 

    "passphpadmin" : 
    {
      "Type" : "String",
      "Description" : "The apache htaccess prompt password",
      "NoEcho": "true"
    }
  },
          
  "Mappings" : 
  {
    "AWSInstanceType2Arch" : 
    {
      "t1.micro"    : { "Arch" : "PV64"   },
      "t2.nano"     : { "Arch" : "HVM64"  },
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "t2.large"    : { "Arch" : "HVM64"  },
      "m1.small"    : { "Arch" : "PV64"   },
      "m1.medium"   : { "Arch" : "PV64"   },
      "m1.large"    : { "Arch" : "PV64"   },
      "m1.xlarge"   : { "Arch" : "PV64"   },
      "m2.xlarge"   : { "Arch" : "PV64"   },
      "m2.2xlarge"  : { "Arch" : "PV64"   },
      "m2.4xlarge"  : { "Arch" : "PV64"   },
      "m3.medium"   : { "Arch" : "HVM64"  },
      "m3.large"    : { "Arch" : "HVM64"  },
      "m3.xlarge"   : { "Arch" : "HVM64"  },
      "m3.2xlarge"  : { "Arch" : "HVM64"  },
      "m4.large"    : { "Arch" : "HVM64"  },
      "m4.xlarge"   : { "Arch" : "HVM64"  },
      "m4.2xlarge"  : { "Arch" : "HVM64"  },
      "m4.4xlarge"  : { "Arch" : "HVM64"  },
      "m4.10xlarge" : { "Arch" : "HVM64"  },
      "c1.medium"   : { "Arch" : "PV64"   },
      "c1.xlarge"   : { "Arch" : "PV64"   },
      "c3.large"    : { "Arch" : "HVM64"  },
      "c3.xlarge"   : { "Arch" : "HVM64"  },
      "c3.2xlarge"  : { "Arch" : "HVM64"  },
      "c3.4xlarge"  : { "Arch" : "HVM64"  },
      "c3.8xlarge"  : { "Arch" : "HVM64"  },
      "c4.large"    : { "Arch" : "HVM64"  },
      "c4.xlarge"   : { "Arch" : "HVM64"  },
      "c4.2xlarge"  : { "Arch" : "HVM64"  },
      "c4.4xlarge"  : { "Arch" : "HVM64"  },
      "c4.8xlarge"  : { "Arch" : "HVM64"  },
      "g2.2xlarge"  : { "Arch" : "HVMG2"  },
      "g2.8xlarge"  : { "Arch" : "HVMG2"  },
      "r3.large"    : { "Arch" : "HVM64"  },
      "r3.xlarge"   : { "Arch" : "HVM64"  },
      "r3.2xlarge"  : { "Arch" : "HVM64"  },
      "r3.4xlarge"  : { "Arch" : "HVM64"  },
      "r3.8xlarge"  : { "Arch" : "HVM64"  },
      "i2.xlarge"   : { "Arch" : "HVM64"  },
      "i2.2xlarge"  : { "Arch" : "HVM64"  },
      "i2.4xlarge"  : { "Arch" : "HVM64"  },
      "i2.8xlarge"  : { "Arch" : "HVM64"  },
      "d2.xlarge"   : { "Arch" : "HVM64"  },
      "d2.2xlarge"  : { "Arch" : "HVM64"  },
      "d2.4xlarge"  : { "Arch" : "HVM64"  },
      "d2.8xlarge"  : { "Arch" : "HVM64"  },
      "hi1.4xlarge" : { "Arch" : "HVM64"  },
      "hs1.8xlarge" : { "Arch" : "HVM64"  },
      "cr1.8xlarge" : { "Arch" : "HVM64"  },
      "cc2.8xlarge" : { "Arch" : "HVM64"  }
    },

    "AWSInstanceType2NATArch" : 
    {
      "t1.micro"    : { "Arch" : "NATPV64"   },
      "t2.nano"     : { "Arch" : "NATHVM64"  },
      "t2.micro"    : { "Arch" : "NATHVM64"  },
      "t2.small"    : { "Arch" : "NATHVM64"  },
      "t2.medium"   : { "Arch" : "NATHVM64"  },
      "t2.large"    : { "Arch" : "NATHVM64"  },
      "m1.small"    : { "Arch" : "NATPV64"   },
      "m1.medium"   : { "Arch" : "NATPV64"   },
      "m1.large"    : { "Arch" : "NATPV64"   },
      "m1.xlarge"   : { "Arch" : "NATPV64"   },
      "m2.xlarge"   : { "Arch" : "NATPV64"   },
      "m2.2xlarge"  : { "Arch" : "NATPV64"   },
      "m2.4xlarge"  : { "Arch" : "NATPV64"   },
      "m3.medium"   : { "Arch" : "NATHVM64"  },
      "m3.large"    : { "Arch" : "NATHVM64"  },
      "m3.xlarge"   : { "Arch" : "NATHVM64"  },
      "m3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.large"    : { "Arch" : "NATHVM64"  },
      "m4.xlarge"   : { "Arch" : "NATHVM64"  },
      "m4.2xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.4xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.10xlarge" : { "Arch" : "NATHVM64"  },
      "c1.medium"   : { "Arch" : "NATPV64"   },
      "c1.xlarge"   : { "Arch" : "NATPV64"   },
      "c3.large"    : { "Arch" : "NATHVM64"  },
      "c3.xlarge"   : { "Arch" : "NATHVM64"  },
      "c3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "c3.4xlarge"  : { "Arch" : "NATHVM64"  },
      "c3.8xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.large"    : { "Arch" : "NATHVM64"  },
      "c4.xlarge"   : { "Arch" : "NATHVM64"  },
      "c4.2xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.4xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.8xlarge"  : { "Arch" : "NATHVM64"  },
      "g2.2xlarge"  : { "Arch" : "NATHVMG2"  },
      "g2.8xlarge"  : { "Arch" : "NATHVMG2"  },
      "r3.large"    : { "Arch" : "NATHVM64"  },
      "r3.xlarge"   : { "Arch" : "NATHVM64"  },
      "r3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "r3.4xlarge"  : { "Arch" : "NATHVM64"  },
      "r3.8xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.xlarge"   : { "Arch" : "NATHVM64"  },
      "i2.2xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.4xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.8xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.xlarge"   : { "Arch" : "NATHVM64"  },
      "d2.2xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.4xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.8xlarge"  : { "Arch" : "NATHVM64"  },
      "hi1.4xlarge" : { "Arch" : "NATHVM64"  },
      "hs1.8xlarge" : { "Arch" : "NATHVM64"  },
      "cr1.8xlarge" : { "Arch" : "NATHVM64"  },
      "cc2.8xlarge" : { "Arch" : "NATHVM64"  }
    },

    "AWSRegionArch2AMI" : 
    {
      "us-east-1"        : {"PV64" : "ami-e13739f6", "HVM64" : "ami-e13739f6", "HVMG2" : "ami-e13739f6"},
      "us-west-2"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "NOT_SUPPORTED", "HVMG2" : "NOT_SUPPORTED"},
      "us-west-1"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "NOT_SUPPORTED", "HVMG2" : "NOT_SUPPORTED"},
      "eu-west-1"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "NOT_SUPPORTED", "HVMG2" : "NOT_SUPPORTED"},
      "eu-west-2"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "NOT_SUPPORTED", "HVMG2" : "NOT_SUPPORTED"},
      "eu-central-1"     : {"PV64" : "NOT_SUPPORTED", "HVM64" : "NOT_SUPPORTED", "HVMG2" : "NOT_SUPPORTED"},
      "ap-northeast-1"   : {"PV64" : "NOT_SUPPORTED", "HVM64" : "NOT_SUPPORTED", "HVMG2" : "NOT_SUPPORTED"},
      "ap-northeast-2"   : {"PV64" : "NOT_SUPPORTED", "HVM64" : "NOT_SUPPORTED", "HVMG2" : "NOT_SUPPORTED"},
      "ap-southeast-1"   : {"PV64" : "NOT_SUPPORTED", "HVM64" : "NOT_SUPPORTED", "HVMG2" : "NOT_SUPPORTED"},
      "ap-southeast-2"   : {"PV64" : "NOT_SUPPORTED", "HVM64" : "NOT_SUPPORTED", "HVMG2" : "NOT_SUPPORTED"},
      "ap-south-1"       : {"PV64" : "NOT_SUPPORTED", "HVM64" : "NOT_SUPPORTED", "HVMG2" : "NOT_SUPPORTED"},
      "us-east-2"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "NOT_SUPPORTED", "HVMG2" : "NOT_SUPPORTED"},
      "ca-central-1"     : {"PV64" : "NOT_SUPPORTED", "HVM64" : "NOT_SUPPORTED", "HVMG2" : "NOT_SUPPORTED"},
      "sa-east-1"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "NOT_SUPPORTED", "HVMG2" : "NOT_SUPPORTED"},
      "cn-north-1"       : {"PV64" : "NOT_SUPPORTED", "HVM64" : "NOT_SUPPORTED", "HVMG2" : "NOT_SUPPORTED"}
    }
  },

  "Resources" :
  {

    "WebServerInstance":
    {  
      "Type": "AWS::EC2::Instance",

      "Metadata" : 
      {
        "AWS::CloudFormation::Init" : 
        {
          "configSets" : 
          {
            "InstallAndRun" : [ "Install", "Configure" ]
          },

          "Install" : 
          {
            "packages" : 
            {
              "apt" : 
              {
                "git"        : [],
                "curl"        : [],
                "apache2"        : [],
                "php7.0"        : [],
                "php7.0-common"        : [],
                "php7.0-curl"        : [],
                "php7.0-mysql"        : [],
                "php7.0-json"        : [],
                "php7.0-cgi"        : [],
                "php7.0-cli"        : [],
                "php7.0-odbc"        : [],
                "php7.0-sqlite3"        : [],
                "php7.0-mcrypt"        : [],
                "php7.0-xml"        : [],
                "php7.0-soap"        : [],
                "php7.0-xmlrpc"        : [],
                "php7.0-gd"        : [],
                "php7.0-mbstring"        : [],
                "libapache2-mod-php7.0"        : [],   
                "mysql-server"        : [],
                "mysql-utilities"        : [],
                "mysql-common"        : [],
                "mysql-client"        : [],
                "libmysqlclient20"        : [],
                "phpmyadmin"        : []         
              }
            },

            "files" : 
            {              
              "/tmp/setupdbmain.mysql" : 
              {
                "content" : 
                { "Fn::Join" : ["", [
                  "CREATE USER '", { "Ref" : "DBMain" }, "'@'localhost' IDENTIFIED BY '", { "Ref" : "DBMainPasswd" }, "';\n",
                  "GRANT ALL PRIVILEGES ON *.* TO '", { "Ref" : "DBMain" }, "'@localhost WITH GRANT OPTION;\n",
                  "FLUSH PRIVILEGES;\n"
                  ]]
                },
                "mode"  : "000400",
                "owner" : "root",
                "group" : "root"
              },

              "/etc/cfn/cfn-hup.conf" : 
              {
                "content" : 
                  { "Fn::Join" : ["", [
                  "[main]\n",
                  "stack=", { "Ref" : "AWS::StackId" }, "\n",
                  "region=", { "Ref" : "AWS::Region" }, "\n"
                  ]]},
                "mode"    : "000400",
                "owner"   : "root",
                "group"   : "root"
              },

              "/etc/cfn/hooks.d/cfn-auto-reloader.conf" : 
              {
                "content": 
                  { "Fn::Join" : ["", [
                  "[cfn-auto-reloader-hook]\n",
                  "triggers=post.update\n",
                  "path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init\n",
                  "action=/opt/aws/bin/cfn-init -v ",
                  "         --stack ", { "Ref" : "AWS::StackName" },
                  "         --resource WebServerInstance ",
                  "         --configsets InstallAndRun ",
                  "         --region ", { "Ref" : "AWS::Region" }, "\n",
                  "runas=root\n"
                  ]]}
              },

              "/etc/phpmyadmin/config-db-extra.php" : {
                "content" : { "Fn::Join" : ["", [
                  "<?php\n",
                  "/* Authentication type */\n",
                  "$cfg['Servers'][$i]['auth_type'] = 'cookie';\n",
                  "/* Server parameters */\n",
                  "$cfg['Servers'][$i]['connect_type'] = 'tcp';\n",
                  "$cfg['Servers'][$i]['compress'] = false;\n",
                  "$cfg['Servers'][$i]['hide_db'] = '(mysql|information_schema|performance_schema|innodb)';\n",
                  "$i++;\n",
                  "?>\n"
                ] ] },
                "mode" : "00644",
                "owner" : "root",
                "group" : "www-data"
              },

              "/usr/share/phpmyadmin/.htaccess" : 
              {
                "content" : 
                { 
                  "Fn::Join" : ["\n", [ 
                  "AuthType Basic",
                  "AuthName \"Restricted Files\"",
                  "AuthUserFile /usr/share/phpmyadmin/.htpasswd",
                  "Require valid-user"
                  ] ] 
                },
                "mode" : "00755",
                "owner" : "www-data",
                "group" : "www-data"
              }

            },

            
            "services" : 
            {
              "mysqld"  : 
              { 
                "enabled" : "true", "ensureRunning" : "true" 
              },

              "apache2"   : 
              { 
                "enabled" : "true", "ensureRunning" : "true" 
              },

              "cfn-hup" : 
              { 
                "enabled" : "true", "ensureRunning" : "true",
                "files" : ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]
              }
            }
          },

          "Configure" : 
          {
            "commands" : 
            {
              "01_set_mysql_root_password" : 
              {
                "command" : { "Fn::Join" : ["", ["sudo mysqladmin -u root password '", { "Ref" : "DBRootPassword" }, "'"]]}
              },

              "02_create_dbmain" : 
              {
                "command" : { "Fn::Join" : ["", ["sudo mysql -u root --password='", { "Ref" : "DBRootPassword" }, "' < /tmp/setupdbmain.mysql"]]}
              },

            }
          }
        }
      },

      "Properties": 
      {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                    { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType"   : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ {"Ref" : "WebServerSecurityGroup"} ],
        "Tags" : [ { "Key" : "Name", "Value" : "LAMP + PHPMYADMIN" } ],
        "KeyName"        : { "Ref" : "KeyName" },
        "UserData"       : 
        { 
          "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -xe\n",
          "apt-get update\n",
          "apt-get -y upgrade\n",
          "apt-get -y install python-pip\n",
          "pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
          "cp /usr/local/init/ubuntu/cfn-hup /etc/init.d/cfn-hup \n",
          "chmod +x /etc/init.d/cfn-hup \n",
          "update-rc.d cfn-hup defaults \n ",
          "service cfn-hup start \n",
          
          "# Install the files and packages from the metadata\n",
          "cfn-init -v ",
          "         --stack ", {"Ref": "AWS::StackName"},
          "         --resource WebServerInstance ",
          "         --configsets InstallAndRun ",
          "         --region ", {"Ref": "AWS::Region"}, "\n",

          "echo '' >> /etc/apache2/apache2.conf\n",
          "echo 'Include /etc/phpmyadmin/apache.conf' >> /etc/apache2/apache2.conf\n",

          "echo 'require(\"/etc/phpmyadmin/config-db-extra.php\");' >> /etc/phpmyadmin/config.inc.php\n",
          
          "sed -i 's/DirectoryIndex\\ index\\.php/DirectoryIndex\\ index\\.php\\n\tAllowOverride\\ All/' /etc/phpmyadmin/apache.conf\n",
          "htpasswd -c -b /usr/share/phpmyadmin/.htpasswd phpmyadmin ", { "Ref" : "passphpadmin" }, "\n",
          
          "service apache2 restart\n",

          "# Signal the status from cfn-init\n",
          "cfn-signal -e $? ",
          "         --stack ", {"Ref": "AWS::StackName"},
          "         --resource WebServerInstance ",
          "         --region ", { "Ref": "AWS::Region"}, "\n" 
          ]]}}        
        },
    
      "CreationPolicy" : 
      {
        "ResourceSignal" : 
        {
          "Timeout" : "PT5M"
        }
      },
    },

    "WebServerSecurityGroup" : 
    {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : 
      {
        "GroupDescription" : "Enable HTTP access via port 80",
        "SecurityGroupIngress" : 
        [
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}}
        ]
      }      
    },
},

  "Outputs" : 
  {
    "WebsiteURL" : 
    {
      "Description" : "URL for newly created LAMP stack",
      "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "WebServerInstance", "PublicDnsName" ]}]] }
    },

    "PHPMyAdminURL" : 
    {
      "Description" : "URL for newly created PHPMYADMIN",
      "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "WebServerInstance", "PublicDnsName" ]}, "/phpmyadmin" ]] }
    },

    "DBMAINUSER" : 
    {
      "Description" : "URL for newly created PHPMYADMIN",
      "Value" : { "Fn::Join" : ["", [ { "Ref" : "DBMain" } ]] }
    }
  }
}